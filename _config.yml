# Welcome to Jekyll!
#
# This config file is meant for settings that affect your whole blog, values
# which you are expected to set up once and rarely edit after that. If you find
# yourself editing this file very often, consider using Jekyll's data files
# feature for the data you need to update frequently.
#
# For technical reasons, this file is *NOT* reloaded automatically when you use
# 'bundle exec jekyll serve'. If you change this file, please restart the server process.
#
# If you need help with YAML syntax, here are some quick references for you:
# https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/#yaml
# https://learnxinyminutes.com/docs/yaml/
#
# Site settings
# These are used to personalize your new site. If you look in the HTML files,
# you will see them accessed via {{ site.title }}, {{ site.email }}, and so on.
# You can create any custom variable you would like, and they will be accessible
# in the templates via {{ site.myvariable }}.

title: Leonardo Cahuich #Your awesome title
email: info@cahuich.com #your-email@example.com
description: >- # this means to ignore newlines until "baseurl:"
  Write an awesome description for your new site here. You can edit this
  line in _config.yml. It will appear in your document head meta (for
  Google search results) and in your feed.xml site description.
baseurl: "" # the subpath of your site, e.g. /blog
url: "https://preview.cahuich.com/" # the base hostname & protocol for your site, e.g. http://example.com
#twitter_username: jekyllrb
github_username:  LeonardoCahuichMX

# Build settingss
theme: cahuichcom

#seo
tagline: "Un sitio web dedicado a publicar mi arte."
logo: /icon.png
author:
  name: Ngo Soufei
  links: "http://ngosoufei.com/"
social:
    - "https://www.instagram.com/sophia_mukho/"

#gihub
#lsi: false
#safe: true
#source: https://github.com/LeonardoCahuichMX/preview-ngosoufei-com
#incremental: false
#highlighter: rouge
#gist:
#  noscript: false
#kramdown:
#  math_engine: mathjax
#  syntax_highlighter: rouge

# Exclude from processing.
# The following items will not be processed, by default.
# Any item listed under the `exclude:` key here will be automatically added to
# the internal "default list".
#
# Excluded items can be processed by explicitly listing the directories or
# their entries' file path in the `include:` list.
#
# exclude:
#   - .sass-cache/
#   - .jekyll-cache/
#   - gemfiles/
#   - Gemfile
#   - Gemfile.lock
#   - node_modules/
#   - vendor/bundle/
#   - vendor/cache/
#   - vendor/gems/
#   - vendor/ruby/

## front matter defecto
defaults:
 -
   scope:
     path: "posts" # empty string means all files
   values:
     layout: "post"
     author: "Leonardo Cahuich"

#plugins:
 # - jekyll-paginate # lo agregué for enhancement
#  - jekyll-paginate-v2

plugins:
 - jekyll-paginate-v2
 - jekyll-default-layout
   #Si no se especifica ningún diseño para un post o página Markdown,
   #el plugin establece automáticamente el diseño de "casa", "post",
   #"página" o "por defecto" si existe.
   #https://github.com/benbalter/jekyll-default-layout
 - jekyll-seo-tag
   #https://github.com/jekyll/jekyll-seo-tag
 - jekyll-webp
# - jekyll-remote-theme
  
############################################################
### Colecciones

collections:
  - staff_members
  - portafolio

collections:
  staff_members:
    #permalink: /:collection/:name
    permalink: /equipo/:path/
    people: true
    output: true
  portafolio:
    output: true
    permalink: /portafolio/:path/

############################################################
# Site configuration for the Auto-Pages feature
# The values here represent the defaults if nothing is set
autopages:

  # Site-wide kill switch, disable here and it doesn't run at all
  enabled: true

  # Category pages, omit entire config element to disable
  categories:
    # Optional, the list of layouts that should be processed for every category found in the site
    layouts:
      - 'autopage_category.html'
    # Optional, the title that each category paginate page should get (:cat is replaced by the Category name)
    title: 'Posts in category :Portafolio_2'
    # Optional, the permalink for the  pagination page (:cat is replaced),
    # the pagination permalink path is then appended to this permalink structure
    permalink: '/category/:Portafolio_2'
    # Optional, when true logging related to category pages will be supressed.
    silent: false
    slugify:
      mode: 'default'   # :cat is slugified. Modes: default, raw, pretty, ascii, latin
      case: false       # Whether to replace all uppercase letters with their lowercase counterparts

  # Collection pages, omit to disable
  collections:
    layouts:
      - 'autopage_collection.html'
    title: 'Posts in collection :coll' # :coll is replaced by the collection name
    permalink: '/collection/:coll'
    silent: false
    slugify:
      mode: 'default'   # :coll is slugified.
      case: false

  # Tag pages, omit to disable
  tags:
    layouts:
      - 'autopage_tags.html'
    title: 'Posts tagged with :tag' # :tag is replaced by the tag name
    permalink: '/tag/:tag'
    silent: false
    slugify:
      mode: 'default'   # :tag is slugified.
      case: false
############################################################
# Site configuration for the Jekyll 3 Pagination Gem
# The values here represent the defaults if nothing is set
pagination:

  # Site-wide kill switch, disabled here it doesn't run at all
  enabled: true

  # Set to 'true' to enable pagination debugging. This can be enabled in the site config or only for individual pagination pages
  debug: false

  # The default document collection to paginate if nothing is specified ('posts' is default)
  collection: 'posts'

  # How many objects per paginated page, used to be `paginate` (default: 0, means all)
  per_page: 8

  # The permalink structure for the paginated pages (this can be any level deep)
  permalink: '/:num/' # Pages are index.html inside this folder (default)
  #permalink: '/page/:num.html' # Pages are simple html files
  #permalink: '/page/:num' # Pages are html files, linked jekyll extensionless permalink style.

  # Optional the title format for the paginated pages (supports :title for original page title, :num for pagination page number, :max for total number of pages)
  title: ':title - page :num'

  # Limit how many pagenated pages to create (default: 0, means all)
  limit: 0

  # Optional, defines the field that the posts should be sorted on (omit to default to 'date')
  sort_field: 'date'

  # Optional, sorts the posts in reverse order (omit to default decending or sort_reverse: true)
  sort_reverse: true

  # Optional, the default category to use, omit or just leave this as 'posts' to get a backwards-compatible behavior (all posts)
  category: 'posts'

  # Optional, the default tag to use, omit to disable
  tag: ''

  # Optional, the default locale to use, omit to disable (depends on a field 'locale' to be specified in the posts,
  # in reality this can be any value, suggested are the Microsoft locale-codes (e.g. en_US, en_GB) or simply the ISO-639 language code )
  locale: ''

  # Optional,omit or set both before and after to zero to disable.
  # Controls how the pagination trail for the paginated pages look like.
  trail:
    before: 2
    after: 2

  # Optional, the default file extension for generated pages (e.g html, json, xml).
  # Internally this is set to html by default
  extension: html

  # Optional, the default name of the index file for generated pages (e.g. 'index.html')
  # Without file extension
  indexpage: 'index'

############################################################

############################################################
# Site configuration for the WebP Generator Plugin
# The values here represent the defaults if nothing is set
#https://github.com/sverrirs/jekyll-webp

webp:
  enabled: true
  
  # The quality of the webp conversion 0 to 100 (where 100 is least lossy)
  quality: 100

  # List of directories containing images to optimize, nested directories will only be checked if `nested` is true
  # By default the generator will search for a folder called `/img` under the site root and process all jpg, png and tiff image files found there.
  img_dir: ["/assets/img", "/assets/img/home", "/assets/img/obras/vas", "/assets/img/obras/miedo", "/assets/img/obras/sombras", "/assets/img/blog", "/assets/img/about", "/assets/img/trabajos-independientes"]

  # Whether to search in nested directories or not
  #nested: false
  nested: false

  # add ".gif" to the format list to generate webp for animated gifs as well
  formats: [".jpeg", ".jpg", ".png", ".tiff"]

  # File extensions for animated gif files 
  gifs: [".gif"]

  # Set to true to always regenerate existing webp files
  regenerate: false

  # Local path to the WebP utilities to use (relative or absolute)
  # Omit or leave as nil to use the utilities shipped with the gem, override only to use your local install
  # Eg : "/usr/local/bin/cwebp"
  webp_path: nil

  # List of files or directories to exclude
  # e.g. custom or hand generated webp conversion files
  exclude: []

  # append '.webp' to filename after original extension rather than replacing it.
  # Default transforms `image.png` to `image.webp`, while changing to true transforms `image.png` to `image.png.webp`
  append_ext: false
############################################################

###########################################################
